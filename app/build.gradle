plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
    id 'dagger.hilt.android.plugin'
}
android {

    namespace 'com.fsoftstudio.kinopoisklite'
    compileSdk 33

    defaultConfig {
        applicationId "com.fsoftstudio.kinopoisklite"
        minSdk 22
        targetSdk 33
        versionCode 5
        versionName "1.0.2"

        testInstrumentationRunner "com/fsoftstudio/kinopoisklite/HiltAndroidTestRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"
                ]
            }
        }
        buildFeatures {
            viewBinding true
        }
    }
    signingConfigs {
        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())

        release {
            storeFile file(properties.getProperty('appPrivateKey'))
            keyAlias properties.getProperty('keyAlias')
            storePassword properties.getProperty('storePassword')
            keyPassword properties.getProperty('keyPassword')
        }
    }
    buildTypes {
        release {
//            isShrinkResources = true
            minifyEnabled = true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
//            isShrinkResources = false
            minifyEnabled = false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    packagingOptions {
        resources.excludes.add("META-INF/LICENSE*")
    }
}

kapt {
    correctErrorTypes true
}

hilt {
    enableAggregatingTask = true
}

dependencies {

    implementation platform('com.google.firebase:firebase-bom:31.2.3')
    implementation 'com.google.firebase:firebase-database-ktx'

    implementation 'androidx.core:core-ktx:1.10.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.fragment:fragment-ktx:1.5.6'
    implementation 'androidx.recyclerview:recyclerview:1.3.0'
    implementation("io.reactivex.rxjava3:rxjava:3.1.5")
    implementation('io.reactivex.rxjava3:rxandroid:3.0.2')
    implementation('io.coil-kt:coil:2.2.2')

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'
    testImplementation 'org.junit.jupiter:junit-jupiter'

    var lifecycle_version = "2.6.1"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    var navigation_version = "2.5.3"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"

    var retrofit2_version = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit2_version"
    implementation "com.squareup.retrofit2:adapter-rxjava3:$retrofit2_version"

    var okhttp3_version = "4.10.0"
    implementation "com.squareup.okhttp3:okhttp:$okhttp3_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3_version"

    var hilt_version = "2.45"
    implementation("com.google.dagger:hilt-android:$hilt_version")
    kapt("com.google.dagger:hilt-android-compiler:$hilt_version")
    kapt("androidx.hilt:hilt-compiler:1.0.0")
    implementation 'com.google.dagger:dagger:2.45'

    var room_version = "2.5.1"
    implementation("androidx.room:room-runtime:$room_version")
    annotationProcessor("androidx.room:room-compiler:$room_version")
    kapt("androidx.room:room-compiler:$room_version")
    implementation("androidx.room:room-ktx:$room_version")
    implementation("androidx.room:room-rxjava3:$room_version")

    var work_version = "2.8.1"
    // Kotlin + coroutines
    implementation("androidx.work:work-runtime-ktx:$work_version")
    // optional - RxJava3 support
    implementation("androidx.work:work-rxjava3:$work_version")
    // optional - GCMNetworkManager support
    implementation("androidx.work:work-gcm:$work_version")
    // optional - Test helpers
    androidTestImplementation("androidx.work:work-testing:$work_version")
    // optional - Multiprocess support
    implementation "androidx.work:work-multiprocess:$work_version"
    //Hilt with workManager
    implementation 'androidx.hilt:hilt-work:1.0.0'


    // --- For tests ---

    testImplementation "io.mockk:mockk:1.13.4"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4'
    testImplementation 'junit:junit:4.13.2'

    // For robolectric
    testImplementation 'org.robolectric:robolectric:4.9'
    testImplementation 'androidx.arch.core:core-testing:2.2.0'
    testImplementation("com.google.dagger:hilt-android-testing:$hilt_version")
    kaptTest("com.google.dagger:hilt-android-compiler:$hilt_version")

    // For instrumented tests
    androidTestImplementation 'androidx.arch.core:core-testing:2.2.0'
    androidTestImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4'
    androidTestImplementation 'junit:junit:4.13.2'
    androidTestImplementation "org.hamcrest:hamcrest:2.2"
    androidTestImplementation("androidx.test.ext:junit:1.1.5")

    var runner_version = "1.5.2"
    testImplementation "androidx.test:runner:$runner_version"
    androidTestImplementation "androidx.test:runner:$runner_version"
    var rules_version = "1.5.0"
    testImplementation "androidx.test:rules:$rules_version"
    androidTestImplementation "androidx.test:rules:$rules_version"

    androidTestImplementation 'androidx.navigation:navigation-testing:2.5.3'
    androidTestImplementation("com.google.dagger:hilt-android-testing:$hilt_version")
    kaptAndroidTest("com.google.dagger:hilt-android-compiler:$hilt_version")
    debugImplementation "io.mockk:mockk:1.13.4"
    debugImplementation "androidx.fragment:fragment-testing:1.5.6"

    // For espresso
    var espresso_version = "3.5.1"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espresso_version"
}